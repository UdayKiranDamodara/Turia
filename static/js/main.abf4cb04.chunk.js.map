{"version":3,"sources":["contexts/Position.js","FixedPoint.js","MovablePoint.js","ManualInput.js","App.js","index.js"],"names":["PositionContext","createContext","PositionContextProvider","props","useState","x","y","position","setPosition","Provider","value","children","FixedPoint","className","MovablePoint","useContext","movablePoint","useRef","handleMouseMove","event","temp","layerX","layerY","slope","Math","atan2","updatedValue","cos","sin","console","log","handleMouseUp","current","removeEventListener","useEffect","style","transform","ref","onMouseDown","addEventListener","ManualInput","manualInputRef","m1","m2","s1","s2","input","setInput","time","Number","angle","PI","type","maxLength","onInput","target","prevState","newState","replace","autoFocus","App","timerName","setTimerName","Timer","displayTime","setDisplayTime","initialDisplayTime","setInitialDisplayTime","active","setActive","buttonRef","slopeY","floor","onChange","placeholder","width","height","cx","cy","r","stroke","strokeWidth","fillOpacity","d","onClick","display","window","clearInterval","prev","beginTime","timeRemaining","setInterval","ReactDOM","render","Position","document","getElementById"],"mappings":"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","file":"static/js/main.abf4cb04.chunk.js","sourcesContent":["import { createContext, useState } from \"react\";\r\n\r\nexport const PositionContext = createContext()\r\n\r\nconst PositionContextProvider = (props) => {\r\n    const [position, setPosition] = useState({x: 0, y: -250 })\r\n\r\n    return(\r\n        <PositionContext.Provider value={[position, setPosition]}>\r\n            {props.children}\r\n        </PositionContext.Provider>\r\n    )\r\n}\r\n\r\nexport default PositionContextProvider","const FixedPoint = () => {\r\n    return(\r\n        // <svg className='fixed-point' width='600' height='600'>\r\n        //     <circle cx='300' cy='50' r='13' stroke='blue' strokeWidth='1' fill='blue' />\r\n        // </svg>\r\n        <div className='fixed-point-div' />\r\n\r\n    )\r\n}\r\n\r\nexport default FixedPoint","import { PositionContext } from './contexts/Position'\r\n\r\nimport { useContext, useEffect, useRef } from \"react\"\r\n\r\nconst MovablePoint = () => {\r\n\r\n    const [position, setPosition] = useContext(PositionContext)\r\n\r\n    const movablePoint = useRef()\r\n\r\n    const handleMouseDown = (event) => {\r\n        // console.log(event.pageX, event.pageY)\r\n        movablePoint.current.addEventListener('mousemove', handleMouseMove)\r\n\r\n\r\n        movablePoint.current.addEventListener('mouseup', handleMouseUp)\r\n    }\r\n\r\n    const handleMouseMove = (event) => {\r\n        // console.log(event.layerX, event.layerY)\r\n        const temp = {\r\n            x: event.layerX-300,\r\n            y: event.layerY-300\r\n        }\r\n        let slope = Math.atan2(temp.y, temp.x)\r\n        const updatedValue = {\r\n            x: Math.cos(slope)*250,\r\n            y: Math.sin(slope)*250\r\n        }\r\n        console.log('temp', temp)\r\n        console.log('updatedValue', updatedValue)\r\n        setPosition(updatedValue)\r\n    }\r\n\r\n    const handleMouseUp = (event) => {\r\n        movablePoint.current.removeEventListener('mouseup', handleMouseUp)\r\n        movablePoint.current.removeEventListener('mousemove', handleMouseMove)\r\n        console.log('removed')\r\n    }\r\n\r\n    useEffect(()=>{\r\n        // movablePoint.current.style.transform = `translate(285px, 285px)`\r\n        movablePoint.current.style.transform = `translate(${285+position.x}px, ${285+position.y}px)`\r\n        // const rect = movablePoint.current.getBoundingClientRect()\r\n        // console.log(rect)\r\n    }, [position])\r\n\r\n    return(\r\n        // <svg className='movable-point' width='600' height='600'>\r\n        //     <circle cx={300+position.x} cy={300+position.y} r='13' stroke='blue' strokeWidth='1' fill='blue' />\r\n        // </svg>\r\n        <div className='movable-point-div' ref={movablePoint} onMouseDown={handleMouseDown} />\r\n    )\r\n}\r\n\r\nexport default MovablePoint","import { useState, useContext, useEffect } from 'react'\r\nimport { PositionContext } from './contexts/Position'\r\n\r\nconst ManualInput = ({ manualInputRef }) => {\r\n\r\n    const [position, setPosition] = useContext(PositionContext)\r\n    const [input, setInput] = useState({\r\n        m1: 0,\r\n        m2: 0,\r\n        s1: 0,\r\n        s2: 0\r\n    })\r\n\r\n    useEffect(()=>{\r\n        const time = (Number(input.s2)) + (10*Number(input.s1)) + (60*Number(input.m2)) + (600*Number(input.m1))\r\n        console.log('m1:', input.m1)\r\n        console.log('m2:', input.m2)\r\n        console.log('s1:', input.s1)\r\n        console.log('s2:', input.s2)\r\n        console.log('time', time)\r\n        let angleY = (Math.PI*time)/1800\r\n        let angle = angleY - (Math.PI/2)\r\n        const updatedValue = {\r\n            x: Math.cos(angle)*250,\r\n            y: Math.sin(angle)*250\r\n        }\r\n        console.log('updatedValue: ', updatedValue.x, updatedValue.y)\r\n        setPosition(updatedValue)\r\n    }, [input])\r\n\r\n    return(\r\n        <div ref={manualInputRef} className='manualInput-container-outer'>\r\n        <div className='manualInput-container'>\r\n            <input \r\n                className='input input-1' \r\n                type='text' maxLength='1' \r\n                value={input.m1} \r\n                onInput={event => {\r\n                    console.log(event.target.value);\r\n                    setInput((prevState)=>{\r\n                        const newState = {...prevState}\r\n                        newState.m1 = event.target.value.replace(/[^0-5]/g,'')\r\n                        return newState\r\n                    })\r\n                }} \r\n                autoFocus={true} \r\n                />\r\n            <input \r\n                className='input input-2' \r\n                type='text' maxLength='1' \r\n                value={input.m2} \r\n                onInput={event => {\r\n                    console.log(event.target.value);\r\n                    setInput((prevState)=>{\r\n                        const newState = {...prevState}\r\n                        newState.m2 = event.target.value.replace(/[^0-9]/g,'')\r\n                        return newState\r\n                    })\r\n                }}                \r\n                />\r\n            <div>:</div>\r\n            <input \r\n                className='input input-3' \r\n                type='text' maxLength='1' \r\n                value={input.s1} \r\n                onInput={event => {\r\n                    console.log(event.target.value);\r\n                    setInput((prevState)=>{\r\n                        const newState = {...prevState}\r\n                        newState.s1 = event.target.value.replace(/[^0-5]/g,'')\r\n                        return newState\r\n                    })\r\n                }}               \r\n                />\r\n            <input \r\n                className='input input-4' \r\n                type='text' maxLength='1' \r\n                value={input.s2} \r\n                onInput={event => {\r\n                    console.log(event.target.value);\r\n                    setInput((prevState)=>{\r\n                        const newState = {...prevState}\r\n                        newState.s2 = event.target.value.replace(/[^0-9]/g,'')\r\n                        return newState\r\n                    })\r\n                }}                \r\n                />\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ManualInput","import { PositionContext } from './contexts/Position'\n\nimport FixedPoint from './FixedPoint'\nimport MovablePoint from './MovablePoint'\n// import Display from './Display'\nimport ManualInput from './ManualInput'\n\nimport './App.css';\nimport { useContext, useEffect, useRef, useState } from 'react';\n\nfunction App() {\n  // let Timer = null\n  // const [Timer, setTimer] = useState()\n  const [timerName, setTimerName] = useState('')\n  const Timer = useRef()\n\n  const [position, setPosition] = useContext(PositionContext)\n  const [displayTime, setDisplayTime] = useState(3600)\n  const [initialDisplayTime, setInitialDisplayTime] = useState(3600)\n\n  const [active, setActive] = useState(true)\n\n  const manualInputRef = useRef()\n  const buttonRef = useRef()\n\n  // let timeRemaining = 3600\n\n  useEffect(()=>{\n    console.log('position for arc', position)\n    let slope = Math.atan2(position.y, position.x)\n    slope = (slope>0) ? slope : slope+(2*Math.PI)\n    let slopeY = slope + (Math.PI/2)\n    let temp = Math.floor((1800*slopeY)/Math.PI)\n    temp = (temp>3600) ? (temp-3600) : temp\n    setInitialDisplayTime(temp)\n  }, [position])\n\n  const handleButtonClick = (event) => {\n\n    if(active === false){\n        console.log('pausing timer: ', Timer)\n        window.clearInterval(Timer.current)\n        console.log(Timer)\n        setActive(prev => !prev)\n    }\n\n    else {\n      console.log('button click position', position.x , position.y)\n      manualInputRef.current.style.display = 'none'\n      let slope = Math.atan2(position.y, position.x)\n      slope = (slope>0) ? slope : slope+(2*Math.PI)\n      let slopeY = slope + (Math.PI/2)\n      console.log('slope: ', slope)\n\n      const beginTime = Math.floor((1800*slopeY)/Math.PI)\n      let timeRemaining = beginTime\n      timeRemaining = (timeRemaining>3600) ? (timeRemaining-3600) : timeRemaining\n      setDisplayTime(timeRemaining)\n      // setTimeRemaining(beginTime)\n      console.log('begin time: ', beginTime)\n      // setTimer((prevTimer)=>{return setInterval(()=>{\n      //   console.log(timeRemaining)\n      //   if(timeRemaining==0){\n      //     console.log('clearing Timer now', Timer)\n      //     console.log(buttonRef.current)\n      //     reset()\n      //     // window.clearInterval(Timer)\n      //     // handleButtonClick(null)\n      //   }\n      //   console.log('Timer', Timer)\n      //   timeRemaining = timeRemaining -1\n      //   // setTimeRemaining(prev => prev-1)\n      //   setDisplayTime(timeRemaining)\n      //   let angleY = (Math.PI*timeRemaining)/1800\n      //   let angle = angleY - (Math.PI/2)\n      //   const updatedValue = {\n      //       x: Math.cos(angle)*250,\n      //       y: Math.sin(angle)*250\n      //   }\n      //   setPosition(updatedValue)\n      // }, 1000)}\n      // )\n      Timer.current = setInterval(()=>{\n        console.log(timeRemaining)\n        // console.log('Timer', Timer)\n        timeRemaining = timeRemaining -1\n        // setTimeRemaining(prev => prev-1)\n        setDisplayTime(timeRemaining)\n        let angleY = (Math.PI*timeRemaining)/1800\n        let angle = angleY - (Math.PI/2)\n        const updatedValue = {\n            x: Math.cos(angle)*250,\n            y: Math.sin(angle)*250\n        }\n        setPosition(updatedValue)\n        if(timeRemaining==0){\n          window.clearInterval(Timer.current)\n        }\n      }, 1000)\n      setActive(prev => !prev)\n    }\n\n  }\n\n  return (\n    <div className=\"App\">\n      {/* <h1>Say Hi to React bye</h1> */}\n      <input className='timer-name' type='text' value={timerName} onChange={event => setTimerName(event.target.value)} placeholder='Task Turia UI Design'/>\n\n      <div className='container'>\n      {/* <div style={{backgroundColor: 'teal', height: '100px', width: '100px', zIndex: '100', position: 'relative'}}>Hello There</div>   */}\n      <svg className='svg' width='600' height='600'>\n        <circle cx='300' cy='300' r='250' stroke='white' strokeWidth='10' fillOpacity='0'/>\n        {/* <circle cx='300' cy='300' r='200' stroke='aqua' strokeWidth='10' fillOpacity='0'/> */}\n        <path className='arc' d={`m 300 50 A 250 250, 0 ${(position.x>0) ? 0 : 1} 1 , ${300+position.x} ${300+position.y}`} stroke='green' strokeWidth='10' fillOpacity='0' />\n        {(initialDisplayTime==3600) ? <circle cx='300' cy='300' r='250' stroke='green' strokeWidth='10' fillOpacity='0'/> : <circle cx='300' cy='300' r='0' stroke='white' strokeWidth='10' fillOpacity='0'/>}\n      </svg>\n      </div>\n      <FixedPoint />\n      <MovablePoint />\n      {/* <Display /> */}\n      {(active===true)\n        ? <div className='time-display time-display-static' onClick={(event=>{manualInputRef.current.style.display = 'block'})}>{`${(Math.floor(initialDisplayTime/60)<10) ? `0${Math.floor(initialDisplayTime/60)}` : Math.floor(initialDisplayTime/60)}:${(initialDisplayTime%60<10) ? `0${initialDisplayTime%60}` : `${initialDisplayTime%60}`}`}</div>\n        : <div className='time-display'>{`${(Math.floor(displayTime/60)<10) ? `0${Math.floor(displayTime/60)}` : Math.floor(displayTime/60)}:${(displayTime%60<10)? `0${displayTime%60}` : `${displayTime%60}`}`}</div>\n      }\n      <ManualInput manualInputRef={manualInputRef}/>\n      {/* <div className='time-display'>{`${Math.floor(displayTime/60)}:${displayTime%60}`}</div> */}\n      <button ref={buttonRef} className='button' onClick={handleButtonClick}>{`${(active === true) ? 'Start' : 'Stop'}`}</button>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport PositionContextProvider from './contexts/Position'\n\nReactDOM.render(\n    <PositionContextProvider>\n      <App />\n    </PositionContextProvider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}